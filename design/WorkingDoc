# Java Based Traffic Simulator
## Program Working Document

### Specification
The customer wants to have a simulator that can simulate the traffic area, so we need to simulate traffic lights, 
different roads and different vehicle types. Taking inputs from the user and displaying the status of objects within 
the simulation to the user. This simulator can simulate the vehicle moving along the road, interacting with traffic 
lights, moving to another road and finally moving to the end of the road. 

### Decomposition
The problem can be broken into operate objects that interact with each other to achieve the desired behaviour. These 
objects include;
#### Car
The car class will be an object that describes the car on the road which has the following attributes;
- *id* - to distinguish different cars.
- *Length* – the length of a car.
- *Breadth* – the width of a car, is half of its length.
- *Speed* – how far the car moves.
- *Position* – where the car is located on a road.
- *Current Road* – the road the car is currently traveling on.

The car will be able to move, using the move() method, within the simulation along a road depending on its speed. When 
the car is in the same position as a traffic light and if the light is red it will stop, if the light is green it will 
move to the next road. When the car's position is equal to the end of a road and there is no connected road it will stop 
the simulation.
#### Bus
The bus class will be an object that describes the bus on the road which has the following attributes;
- *id* - to distinguish different buses.
- *Length* – three times of the length of car .
- *Breadth* – the width of a bus, is half of its length.
- *Speed* – how far the car moves.
- *Position* – where the car is located on a road.
- *Current Road* – the road the bus is currently traveling on.
#### Motorbike
The motorbike class will be an object that describes the motorbike on the road which has the following attributes;
- *id* - to distinguish different motorbikes.
- *Length* – half of the length of car .
- *Breadth* – the width of a motorbike, is half of its length.
- *Speed* – how far the car moves.
- *Position* – where the car is located on a road.
- *Current Road* – the road the motorbike is currently traveling on.

#### Road
The road class will be an object that describes a single lane road. Holding the following attributes;
- *id* - to distinguish different roads.
- *Length* –  the length of a car.
- *Start location* – the (x,y) coordinate that represents where the road begins.
- *End location* – the (x,y) coordinate that represents where the road ends.

All vehicle speeds will be set to 1. The length of the road will vary based on user input. Traffic lights can only be 
placed at the end of the road. 

#### Traffic Light
The traffic light class will represent a simple red or green traffic light. Holding the following attributes;
- *id* - to distinguish different traffic lights.
- *State* - the colour the ligth is displaying.
- *Position* - where the traffic light is located on the road.
- *Road attached to* - the road that the light is attached to.

The traffic light will operate, using the opperate() method. Randomly changing from green to red. This opperation will 
be based on pseudo-random numbers generated by the program. The light will be placed on a road only at its final 
position, the end of the road, and will interact with cars that are also at that position. If the light is red the cars 
will stop and not move to the next road. If the light is green the cars will continue past and move to the next road.

### Main
This class will have the main() method that will contain the simulation loop.All the objects needed for the simulation 
will be created here; creating roads, a car and a traffic light. The simulation will run, moving the car and operating 
traffic lights, untill the car can no longer move and has come to a stop.
