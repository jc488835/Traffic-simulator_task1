# Java Based Traffic Simulator
## Program Working Document

### Specification
The customer wants to have a simulator that can simulate the traffic area, so we need to simulate traffic lights, 
different roads and different vehicle types. Taking inputs from the user and displaying the status of objects within 
the simulation to the user. This simulator can simulate the vehicle moving along the road, interacting with traffic 
lights, moving to another road and finally moving to the end of the road. 

### Decomposition
The problem can be broken into operate objects that interact with each other to achieve the desired behaviour. These 
objects include;
### Vehicle 
The vehicle class will be abstract, having the Model.Car Model.Bus and Model.Motorbike as it subclasses. Having the following attributes;
- *id* – a unique identifier that will differentiate each vehicle.
- *Length* – the physical space the vehicle occupies longways.
- *Breadth* – the physical space the vehicle occupies widthways, half the vehicles length.
- *Speed* – how far the vehicle moves for each simulation turn.
- *Position* – where the vehicle is located on a road.
- *Current Model.Road* – the road the vehicle is currently traveling on.
- *Colour* - a colour assigned to each vehicle for when it is represented graphically.

A vehicle will be able to move, using the move() method, within the simulation along a road depending on its speed, 
the speed will be defined by the speed limit of the road the car is traveling on. When the car is in the same position 
as a traffic light it will check its state before moving, if the light is red it will stop, if the light is green it 
will move to the next road. When the vehicles position is equal to the end of a road and there is no connected road it 
will stop and be removed ending the simulation. The vehicle will also be in control of how it is represented 
graphically with its draw() method.

##### Car
The car class will bea subclass of vehicle, an object that describes an average size road vehicle.  


##### Bus
The bus class will be a subclass of vehicle, describing a large road vehicle. It will inherit its attributes and behaviour 
from Model.Car except its length will be defined as being three times that of the car’s length. 

##### Motorbike
The motorbike class will be a subclass of vehicle, describing a small road vehicle. It will inherit its attributes from 
and behaviour Model.Car except its length will be defined as being half that of the car’s length.

#### Road
The road class will be an object that describes a single lane road. Holding the following attributes;
- *id* - to distinguish different roads.
- *Length* –  the length of a car.
- *Start location* – the (x,y) coordinate that represents where the road begins.
- *End location* – the (x,y) coordinate that represents where the road ends.

All vehicle speeds will be set to 1. The length of the road will vary based on user input. Traffic lights can only be 
placed at the end of the road. 

#### Traffic Light
The traffic light class will represent a simple red or green traffic light. Holding the following attributes;
- *id* - to distinguish different traffic lights.
- *State* - the colour the ligth is displaying.
- *Position* - where the traffic light is located on the road.
- *Road attached to* - the road that the light is attached to.
- *Lights on the road* – all the traffic lights that are on the ends this road.
- *Cars on the road* – all of the cars that are currently traveling on this road.

The traffic light will operate, using the opperate() method. Randomly changing from green to red. This opperation will 
be based on pseudo-random numbers generated by the program. The light will be placed on a road only at its final 
position, the end of the road, and will interact with cars that are also at that position. If the light is red the cars 
will stop and not move to the next road. If the light is green the cars will continue past and move to the next road.

### SimulationPanel
- *vehiclesToSpawn* - total numbers of vehicles to be spawned in the sim,
- *vehiclesSpawned* - how many vehicles have been spawned so far.
- *vehiclesRemoved* - vehicles that have reached the end of the map and been removed.
- *numberOfCycles* - the number of simulation cycles between spawns.
- *scale* - the scale of objects drawn graphically.

This class will generate the graphical display of the simulation within the main frame. Loading the location of road
and traffic light objects from the editor. Vehicles will be created for the simulation, types of vehicle created
bing random, here and the update rate is also set here depending on user input form dialog boxes in main. The simulation
will be run within a timer.

### EditorPanel
- *scale* - the scale of objects drawn graphically.
This class will generate the graphical display for the city editor within the main frame. Allowing users to click
to place roads, letting them define orientation and connection with dialog boxes within the New menu option.

### SaveFile
This class is for saving simulation files.

### Main
This class will have the main() method that will contain the simulation loop.All the objects needed for the simulation 
will be created here; creating roads, a car and a traffic light. The simulation will run, moving the car and operating 
traffic lights, untill the car can no longer move and has come to a stop.
